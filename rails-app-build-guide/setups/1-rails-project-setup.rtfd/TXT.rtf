{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 HelveticaNeue-Light;
\f3\fmodern\fcharset0 Courier;\f4\fnil\fcharset0 Menlo-Regular;\f5\fmodern\fcharset0 Courier-Bold;
\f6\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red185\green188\blue186;\red22\green23\blue25;
\red197\green200\blue198;\red219\green48\blue28;\red247\green236\blue134;\red250\green132\blue25;\red252\green81\blue252;
\red105\green105\blue105;\red251\green253\blue249;\red53\green118\blue190;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c77255\c78431\c77647;\cssrgb\c11373\c12157\c12941;
\csgenericrgb\c77255\c78431\c77647;\cssrgb\c89412\c27843\c13725;\cssrgb\c97647\c93333\c59608;\cssrgb\c99216\c59216\c12157;\cssrgb\c100000\c45098\c99216;
\cssrgb\c48627\c48627\c48627;\cssrgb\c98824\c99216\c98039;\cssrgb\c25882\c54510\c79216;}
\margl1440\margr1440\vieww17680\viewh12960\viewkind0
\deftab720
\pard\pardeftab720\sl840\sa600\partightenfactor0

\f0\b\fs72 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Lesson 1: Setting Up the Project\
\pard\pardeftab720\sl600\sa200\partightenfactor0

\b0\fs36 \cf2 In this lesson, we will setup a new, fresh Ruby on Rails application for our second web application. These steps will be similar to the steps to setup the first project. It's worth noting that most Ruby on Rails applications are started in this same way.\
\pard\pardeftab720\sl320\partightenfactor0

\f1\fs28 \cf2 \
\
\pard\pardeftab720\sl320\sa1000\partightenfactor0
\cf2 \
\pard\pardeftab720\sl576\sa600\partightenfactor0

\fs32 \cf2 One of the nice things about having already built the Splurty application is that even though we're going to be starting fresh on this new application, we have a lot less to setup, since we've already gone through the installation process.\
If you haven't setup your web development environment, or need to set up a new machine, look to our Splurty lesson on getting started and follow step 1 and step 2.\
You'll notice that much of the first steps in building out this next application is similar to the Splurty application we just built. We'll guide you through the steps again, and much of what we're doing should be familiar to you.\
\pard\pardeftab720\sl840\sa200\partightenfactor0

\f2\fs56 \cf2 Let's Set up the Project\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 In order to begin a new project you'll need to be in your web dev environment. Start vagrant and open two terminal windows.\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\b \cf2 Change the directory to where your code will live
\b0 \'a0- Remember every time you see the gray box with a dollar sign ($) at the very beginning it means you do this inside your terminal window where you also see the dollar sign.\
Now type to following, without the actual dollar sign:\
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 $ cd /vagrant/src\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\b\fs32 \cf2 \cb1 \strokec2 \shad0 Type ls to look at a list of all the other projects you have
\b0 \
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 $ ls\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\b\fs32 \cf2 \cb1 \strokec2 \shad0 Create a new application that uses postgres.
\b0 \'a0I'm going to call my application nomster, but you can call yours whatever you want, so long as there are no spaces in the name.\uc0\u8232 \
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 $ rails new nomster --database=postgresql\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 \cb1 \strokec2 \shad0 Now let's open up our newly created Nomster web application code with our Sublime text editor.\
Inside Sublime Text, go into the menu and click File>Open... (or Open Folder on Windows). Then browse to your desktop and navigate to
\f4\fs28\fsmilli14400 \cf6 \strokec6 Desktop/vagrant/src/your-app-name
\f1\fs32 \cf2 \strokec2 \'a0to open up this folder.\
\pard\pardeftab720\sl320\partightenfactor0

\fs28 \cf2 \
\pard\pardeftab720\sl576\sa600\partightenfactor0

\b\fs32 \cf2 Adjust database.yml
\b0 \
We need to tell our rails application how to connect to our database. We'll need to adjust the username, password and add a section called host. We also need to comment out the username and password on production. The reason we need to do this is the Firehose Project install process sets up our database with these username, password and hosts. Change\'a0
\f4\fs28\fsmilli14400 \cf6 \strokec6 config/database.yml
\f1\fs32 \cf2 \strokec2 \'a0so it looks\'a0
\b exactly
\b0 like the code below:\
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf7 \cb4 \strokec7 \shad0 default\cf3 \strokec3 \shad0 : 
\f5\b \cf8 \strokec8 \shad0 &default
\f3\b0 \cf3 \strokec3 \shad0 \
  \cf7 \strokec7 \shad0 adapter\cf3 \strokec3 \shad0 : postgresql\
  \cf7 \strokec7 \shad0 encoding\cf3 \strokec3 \shad0 : unicode\
  \cf7 \strokec7 \shad0 pool\cf3 \strokec3 \shad0 : <%= ENV.fetch("RAILS_MAX_THREADS") \{ \cf9 \strokec9 \shad0 5 \cf3 \strokec3 \shad0 \} %>\
  \cf7 \strokec7 \shad0 username\cf3 \strokec3 \shad0 : postgres\
  \cf7 \strokec7 \shad0 password\cf3 \strokec3 \shad0 : password\
  \cf7 \strokec7 \shad0 host\cf3 \strokec3 \shad0 : localhost\
\
\cf7 \strokec7 \shad0 development\cf3 \strokec3 \shad0 :\
  \cf7 \strokec7 \shad0 <<\cf3 \strokec3 \shad0 : 
\f5\b \cf8 \strokec8 \shad0 *default
\f3\b0 \cf3 \strokec3 \shad0 \
  \cf7 \strokec7 \shad0 database\cf3 \strokec3 \shad0 : nomster_development\
\
\cf7 \strokec7 \shad0 test\cf3 \strokec3 \shad0 :\
  \cf7 \strokec7 \shad0 <<\cf3 \strokec3 \shad0 : 
\f5\b \cf8 \strokec8 \shad0 *default
\f3\b0 \cf3 \strokec3 \shad0 \
  \cf7 \strokec7 \shad0 database\cf3 \strokec3 \shad0 : nomster_test\
\
\cf7 \strokec7 \shad0 production\cf3 \strokec3 \shad0 :\
  \cf7 \strokec7 \shad0 <<\cf3 \strokec3 \shad0 : 
\f5\b \cf8 \strokec8 \shad0 *default
\f3\b0 \cf3 \strokec3 \shad0 \
  \cf7 \strokec7 \shad0 database\cf3 \strokec3 \shad0 : nomster_production\
  \cf10 \strokec10 \shad0 # username: nomster\cf3 \strokec3 \shad0 \
  \cf10 \strokec10 \shad0 # password: <%= ENV['NOMSTER_DATABASE_PASSWORD'] %>\cf3 \strokec3 \shad0 \
 \
 \
 \
 \
 \
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\b\fs32 \cf2 \cb1 \strokec2 \shad0 Then make sure to save the file.
\b0 \
\pard\pardeftab720\sl320\partightenfactor0

\fs28 \cf2 \
\pard\pardeftab720\sl840\sa200\qc\partightenfactor0

\f2\fs56 \cf2 \cb11 Common gotchas\cb1 \
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 \cb11 1 - Make sure the database adapter already says\'a0
\b postgresql
\b0 \'a0when you open this file. If it doesn't you didn't create the application with the\'a0
\f4\fs28\fsmilli14400 \cf6 \strokec6 --database=postgres
\f1\fs32 \cf2 \strokec2 \'a0command. If you didn't, delete this whole folder that was created and go back to the step above where you ran rails new and continue from there.\cb1 \
\cb11 2 - The\'a0
\f4\fs28\fsmilli14400 \cf6 \strokec6 database.yml
\f1\fs32 \cf2 \strokec2 \'a0file is whitespace sensitive. Make sure your indentation between lines is consistent.\cb1 \
\cb11 3 - Make sure you comment out or delete the two lines under production that say username and password.\cb1 \
\pard\pardeftab720\sl840\sa200\partightenfactor0

\f2\fs56 \cf2 Create your initial database\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\b\fs32 \cf2 Change directory into your project
\b0 \

\b Important:
\b0 \'a0Whenever we want to work with our project we need to make sure we're inside of our project folder (we're going to need to do this every time we open up a new web dev window). If we're not inside our project folder most of the commands will not work.\
In our case, the folder we want to be in is the nomster folder.\

\b If we're not inside our Nomster folder, our machine doesn't know what to do. So make sure you always navigate inside your Nomster folder when working on the Nomster web application
\b0 .\
In our case we can get into the Nomster folder with\'a0
\f4\fs28\fsmilli14400 \cf6 \strokec6 /vagrant/src/nomster
\f1\fs32 \cf2 \strokec2 . Let's jump into the Nomster folder by running:\
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 $ cd /vagrant/src/nomster\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 \cb1 \strokec2 \shad0 At the beginning of each new web application we need to create our initial and empty database so we have a place to store information. So for a single time in this web application, we need to do this:\
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 $ rake db:create\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 \cb1 \strokec2 \shad0 This command outputs that it's creating your development and test environments. Once it is done, it will return the dollar sign:\
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 Created database 'nomster_development'\
Created database 'nomster_test'\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 \cb1 \strokec2 \shad0 If it says they exist already then that is a good thing. If it gives you any error message, check your database.yml file with the example in this lesson.\
\pard\pardeftab720\sl840\sa200\partightenfactor0

\f2\fs56 \cf2 Start your server\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 Now that we have database.yml file configured and our initial database created, it's time to fire up our server and start our web application up.\
We can start our server by running the following command:\
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 $ rails server -b 0.0.0.0 -p 3000\
\pard\pardeftab720\sl320\partightenfactor0

\f1 \cf2 \cb1 \strokec2 \shad0 \
\
\pard\pardeftab720\sl840\sa200\qc\partightenfactor0

\f2\fs56 \cf2 \cb11 Common gotcha\cb1 \
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 \cb11 You cannot run more than one server on the same port!\cb1 \
\cb11 Make sure you stop the servers for any other applications you were working on, otherwise the new app's server will not start.\cb1 \
\pard\pardeftab720\sl576\sa600\partightenfactor0

\b \cf2 The web-dev window where you just ran the\'a0
\f6\fs28\fsmilli14400 \cf6 \strokec6 rails server -b 0.0.0.0 -p 3000
\f1\fs32 \cf2 \strokec2 command will look like it runs for forever because it doesn't return the $ sign..
\b0 \'a0That's a good thing, since we want our server to be running all the time so we can see our nomster web application all the time in our browser.\
One thing you notice, is that the\'a0
\f4\fs28\fsmilli14400 \cf6 \strokec6 rails server -b 0.0.0.0 -p 3000
\f1\fs32 \cf2 \strokec2 \'a0command, basically eats our dollar sign, so we no longer can run commands or do anything with this "web-dev" terminal window.\
Since we can't use our original web-dev terminal window anymore, let's\'a0
\b always make sure to have two seperate "web-dev" terminal windows open.
\b0 \'a0If you only have one open, open another web dev terminal window, and follow the "Change directory into your project" step, or simply run the following in your second "web-dev" terminal window:\
\pard\pardeftab720\sl460\partightenfactor0

\f3\fs28 \cf3 \cb4 \strokec3 \shad0 cd /vagrant/src/nomster\
\pard\pardeftab720\sl840\sa200\partightenfactor0

\f2\fs56 \cf2 \cb1 \strokec2 \shad0 Test out that everything works\
\pard\pardeftab720\sl576\sa600\partightenfactor0

\f1\fs32 \cf2 Go to\'a0{\field{\*\fldinst{HYPERLINK "http://localhost:3030/"}}{\fldrslt \cf12 \strokec12 http://localhost:3030}}\'a0in your browser. You should see something like this:\
\pard\pardeftab720\sl320\partightenfactor0

\fs28 \cf2 \
\pard\pardeftab720\sl576\sa600\partightenfactor0

\fs32 \cf2 High-five!\
}